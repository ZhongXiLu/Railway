{
	"csm": {
		"nodes": {
			"0": {
				"typename": {
					"type": "string",
					"value": "FRuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						403,
						202
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"366": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										26
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"367": {
								"textContent": {
									"type": "string",
									"value": "MoveTrain"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"368": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"369": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"370": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"371": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"372": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"373": {
								"textContent": {
									"type": "string",
									"value": "F"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "100%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										205,
										22
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"374": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										95,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"375": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										37.25,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"376": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										15.25,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"377": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										23,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "366",
								"dest": "375"
							},
							{
								"src": "375",
								"dest": "367"
							},
							{
								"src": "366",
								"dest": "376"
							},
							{
								"src": "376",
								"dest": "371"
							},
							{
								"src": "366",
								"dest": "377"
							},
							{
								"src": "377",
								"dest": "369"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/FRule/0.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon"
			},
			"1": {
				"typename": {
					"type": "string",
					"value": "StartIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						493,
						168
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"21": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 0.75,
										"font-size": "20px",
										"stroke-width": 0,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/Start/1.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/StartIcon"
			},
			"6": {
				"typename": {
					"type": "string",
					"value": "EndSuccessIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						449,
						399
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"23": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#008000",
										"stroke-dasharray": "",
										"fill": "white",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"26": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#008000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 0,
										"arrow-start": "none",
										"arrow-end": "none",
										"": ""
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"27": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.492540538484263,
										6.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "23",
								"dest": "27"
							},
							{
								"src": "27",
								"dest": "26"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndSuccess/6.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon"
			},
			"7": {
				"typename": {
					"type": "string",
					"value": "EndFailIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						552,
						406
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"451": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#800000",
										"stroke-dasharray": "",
										"fill": "white",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"455": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"456": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"457": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.363811097006419,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"458": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.3638135362075445,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "451",
								"dest": "457"
							},
							{
								"src": "457",
								"dest": "455"
							},
							{
								"src": "451",
								"dest": "458"
							},
							{
								"src": "458",
								"dest": "456"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail/7.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon"
			},
			"8": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "initialLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						507.5,
						209.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.499081358686055,2.127178149057619%",
										"0;23.41427548155241,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.497723739028402,2.127178149057619%",
										"0;23.28664479260894,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.497723739028402,2.127178149057619%",
										"0;23.28664479260894,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.497723739028402,2.127178149057619%",
										"0;23.28664479260894,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.498855088743085,2.127178149057619%",
										"0;23.393003700061826,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.498855088743085,2.127178149057619%",
										"0;23.393003700061826,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.497723739028402,2.127178149057619%",
										"0;23.28664479260894,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.499081358686055,2.127178149057619%",
										"0;23.41427548155241,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.498176278914286,2.127178149057619%",
										"0;23.329188355590105,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.497723739028402,2.127178149057619%",
										"0;23.28664479260894,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.498855088743085,2.127178149057619%",
										"0;23.393003700061826,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.498176278914286,2.127178149057619%",
										"0;23.329188355590105,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.498855088743085,2.127178149057619%",
										"0;23.393003700061826,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.497723739028402,2.127178149057619%",
										"0;23.28664479260894,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.499081358686055,2.127178149057619%",
										"0;23.41427548155241,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.498855088743085,2.127178149057619%",
										"0;23.393003700061826,99.97737300570651%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486868"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498868650285317,0%",
										"0;-23.606358907452886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498868650285317,0%",
										"0;-23.606358907452886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498868650285317,0%",
										"0;-23.606358907452886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.497737300570634,0%",
										"0;-23.712717814905744,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.498189840456519,0%",
										"0;-23.670174251924607,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4990949202282877,0%",
										"0;-23.585087125962303,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.497737300570634,0%",
										"0;-23.712717814905744,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.497737300570634,0%",
										"0;-23.712717814905744,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498868650285317,0%",
										"0;-23.606358907452886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498868650285317,0%",
										"0;-23.606358907452886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.497737300570634,0%",
										"0;-23.712717814905744,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.498189840456519,0%",
										"0;-23.670174251924607,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4990949202282877,0%",
										"0;-23.585087125962303,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.497737300570634,0%",
										"0;-23.712717814905744,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4990949202282877,0%",
										"0;-23.585087125962303,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.497737300570634,0%",
										"0;-23.712717814905744,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.78112476486871"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/initial/8.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/StartIcon/1.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink/8.instance": "M507,186L507.5,209.5",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink/8.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/0.instance": "M507.50158895190066,209.57468073932907L507.99998643845777,232.9993626075147"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink"
			},
			"9": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						458.0022222205964,
						344.6499998902606
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.997325738452616,1.481318931395284%",
										"0;67.28985934150967,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.99666741060338,1.481318931395284%",
										"0;67.20098020562597,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.99666741060338,1.481318931395284%",
										"0;67.20098020562597,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.99666741060338,1.481318931395284%",
										"0;67.20098020562597,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.99721601714441,1.481318931395284%",
										"0;67.27504615219573,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.99721601714441,1.481318931395284%",
										"0;67.27504615219573,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.99666741060338,1.481318931395284%",
										"0;67.20098020562597,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.997325738452616,1.481318931395284%",
										"0;67.28985934150967,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.996886853219792,1.481318931395284%",
										"0;67.23060658425385,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.99666741060338,1.481318931395284%",
										"0;67.20098020562597,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.99721601714441,1.481318931395284%",
										"0;67.27504615219573,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.996886853219792,1.481318931395284%",
										"0;67.23060658425385,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.99721601714441,1.481318931395284%",
										"0;67.27504615219573,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.99666741060338,1.481318931395284%",
										"0;67.20098020562597,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.997325738452616,1.481318931395284%",
										"0;67.28985934150967,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.99721601714441,1.481318931395284%",
										"0;67.27504615219573,99.98902786917918%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.1512357284464"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9972291728625464,0%",
										"0;-67.72406583683033,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9972291728625464,0%",
										"0;-67.72406583683033,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9972291728625464,0%",
										"0;-67.72406583683033,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.996680566321515,0%",
										"0;-67.7981317834001,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.996900008937928,0%",
										"0;-67.76850540477221,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;2.9973388941707526,0%",
										"0;-67.7092526475164,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.996680566321515,0%",
										"0;-67.7981317834001,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.996680566321515,0%",
										"0;-67.7981317834001,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9972291728625464,0%",
										"0;-67.72406583683033,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9972291728625464,0%",
										"0;-67.72406583683033,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.996680566321515,0%",
										"0;-67.7981317834001,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.996900008937928,0%",
										"0;-67.76850540477221,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;2.9973388941707526,0%",
										"0;-67.7092526475164,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.996680566321515,0%",
										"0;-67.7981317834001,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;2.9973388941707526,0%",
										"0;-67.7092526475164,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.996680566321515,0%",
										"0;-67.7981317834001,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.15123572844645"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/9.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/0.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/9.instance": "M457,277L458.0022222205964,344.6499998902606",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/9.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon/6.instance": "M458.0022156362487,344.6495554467887L458.99998684428186,411.99911198902606"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"10": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						559,
						346
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.993795159392221,5.547001962252168%",
										"0;71.7772873597815,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;13.98455727862472,5.547001962252168%",
										"0;71.44446724204636,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;13.98455727862472,5.547001962252168%",
										"0;71.44446724204636,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;13.98455727862472,5.547001962252168%",
										"0;71.44446724204636,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.99225551259758,5.547001962252168%",
										"0;71.72181734015896,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.99225551259758,5.547001962252168%",
										"0;71.72181734015896,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;13.98455727862472,5.547001962252168%",
										"0;71.44446724204636,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.993795159392221,5.547001962252168%",
										"0;71.7772873597815,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.987636572213887,5.547001962252168%",
										"0;71.55540728129142,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;13.98455727862472,5.547001962252168%",
										"0;71.44446724204636,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.99225551259758,5.547001962252168%",
										"0;71.72181734015896,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.987636572213887,5.547001962252168%",
										"0;71.55540728129142,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.99225551259758,5.547001962252168%",
										"0;71.72181734015896,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;13.98455727862472,5.547001962252168%",
										"0;71.44446724204636,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.993795159392221,5.547001962252168%",
										"0;71.7772873597815,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.99225551259758,5.547001962252168%",
										"0;71.72181734015896,99.84603532054125%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013584"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;0.9923017660270261,0%",
										"0;-72.2773500981126,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;0.9923017660270261,0%",
										"0;-72.2773500981126,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;0.9923017660270261,0%",
										"0;-72.2773500981126,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.984603532054166,0%",
										"0;-72.55470019622521,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9876828256433328,0%",
										"0;-72.4437601569802,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-0.006158587178333619,0%",
										"0;-72.22188007849007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.984603532054166,0%",
										"0;-72.55470019622521,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.984603532054166,0%",
										"0;-72.55470019622521,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;0.9923017660270261,0%",
										"0;-72.2773500981126,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;0.9923017660270261,0%",
										"0;-72.2773500981126,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.984603532054166,0%",
										"0;-72.55470019622521,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9876828256433328,0%",
										"0;-72.4437601569802,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-0.006158587178333619,0%",
										"0;-72.22188007849007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.984603532054166,0%",
										"0;-72.55470019622521,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-0.006158587178333619,0%",
										"0;-72.22188007849007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.984603532054166,0%",
										"0;-72.55470019622521,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.82016988013577"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/10.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/0.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/10.instance": "M555,274L559,346",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/10.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon/7.instance": "M559.0083101798714,346.1495832376842L562.9999537465706,417.99916743827157"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"0": {
				"maxIterations": {
					"type": "int",
					"value": 1000
				},
				"rule": {
					"type": "file<R_.*\\.model>",
					"value": "/Formalisms/Railway/OperationalSemantics/MoveTrain/R_MoveTrain.model"
				},
				"name": {
					"type": "string",
					"value": "MoveTrain"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						403,
						202
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/FRule"
			},
			"1": {
				"position": {
					"type": "list<int>",
					"value": [
						493,
						168
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/Start"
			},
			"6": {
				"position": {
					"type": "list<int>",
					"value": [
						449,
						399
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndSuccess"
			},
			"7": {
				"position": {
					"type": "list<int>",
					"value": [
						552,
						406
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail"
			},
			"8": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/initial"
			},
			"9": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"10": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			}
		},
		"edges": [
			{
				"src": "1",
				"dest": "8"
			},
			{
				"src": "8",
				"dest": "0"
			},
			{
				"src": "0",
				"dest": "9"
			},
			{
				"src": "9",
				"dest": "6"
			},
			{
				"src": "0",
				"dest": "10"
			},
			{
				"src": "10",
				"dest": "7"
			}
		],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/MoTif"
		]
	}
}