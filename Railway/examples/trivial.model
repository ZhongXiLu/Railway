{
	"csm": {
		"nodes": {
			"138": {
				"typename": {
					"type": "string",
					"value": "StationIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						579,
						337
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"13": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Railway/Icons/station.png"
								},
								"width": {
									"type": "double",
									"value": 180
								},
								"height": {
									"type": "double",
									"value": 70
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"40": {
								"textContent": {
									"type": "string",
									"value": "EndStation"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"font-family": "Calibri",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										34,
										10
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"41": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										22.63536477996547,
										12.569511643766077
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "13",
								"dest": "41"
							},
							{
								"src": "41",
								"dest": "40"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/Station/138.instance"
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/StationIcon"
			},
			"143": {
				"typename": {
					"type": "string",
					"value": "TurnoutIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						399,
						373
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"42": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Railway/Icons/turnout1.png"
								},
								"width": {
									"type": "double",
									"value": 180
								},
								"height": {
									"type": "double",
									"value": 100
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)\nif(getAttr(\"outDirection\") == \"STRAIGHT\") {\n    ({'src':'/Formalisms/Railway/Icons/turnout1.png'})\n} else {\n    ({'src':'/Formalisms/Railway/Icons/turnout2.png'})\n}"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/Turnout/143.instance"
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/TurnoutIcon"
			},
			"144": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.2,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "TrackToTrackLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						618.1499998220006,
						370.0056603706416
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/TrackToTrack/144.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Railway/Railway.defaultIcons/TurnoutIcon/143.instance--/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/144.instance": "M565,368L618.1499998220006,370.00566037064164",
						"/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/144.instance--/Formalisms/Railway/Railway.defaultIcons/StationIcon/138.instance": "M618.0748584684418,370.0028248478658L670.9997171591313,371.99998932675965"
					}
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink"
			},
			"148": {
				"typename": {
					"type": "string",
					"value": "StationIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						217,
						338
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"13": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Railway/Icons/station.png"
								},
								"width": {
									"type": "double",
									"value": 180
								},
								"height": {
									"type": "double",
									"value": 70
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"40": {
								"textContent": {
									"type": "string",
									"value": "StartStation"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"font-family": "Calibri",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										34,
										10
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"41": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										22.63536477996547,
										12.569511643766077
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "13",
								"dest": "41"
							},
							{
								"src": "41",
								"dest": "40"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/Station/148.instance"
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/StationIcon"
			},
			"150": {
				"typename": {
					"type": "string",
					"value": "StartIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						38,
						349
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"19": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Railway/Icons/start.png"
								},
								"width": {
									"type": "double",
									"value": 180
								},
								"height": {
									"type": "double",
									"value": 80
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/Start/150.instance"
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/StartIcon"
			},
			"151": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.2,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "TrackToTrackLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						422,
						347
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/TrackToTrack/151.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Railway/Railway.defaultIcons/StartIcon/150.instance--/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/151.instance": "M43.99999999999997,280L422,347",
						"/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/151.instance--/Formalisms/Railway/Railway.defaultIcons/StationIcon/148.instance": "M422.143507613127,347.0432800738002L114.99956303157188,360.99986821587095"
					}
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink"
			},
			"152": {
				"typename": {
					"type": "string",
					"value": "ClockIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						58,
						159
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"69": {
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"72": {
								"textContent": {
									"type": "string",
									"value": "Step: 1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "22px",
										"font-family": "Calibri",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"Step: \" + getAttr(\"step\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										19
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"73": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12,
										18.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "69",
								"dest": "73"
							},
							{
								"src": "73",
								"dest": "72"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/Clock/152.instance"
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/ClockIcon"
			},
			"153": {
				"typename": {
					"type": "string",
					"value": "ScheduleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						37,
						613
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.1869583333333333,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"width": {
									"type": "double",
									"value": 600
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"3": {
								"textContent": {
									"type": "string",
									"value": "Schedule: Train"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"font-family": "Calibri",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"Schedule: \" + getAttr(\"train\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										10,
										212
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/Schedule/153.instance"
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/ScheduleIcon"
			},
			"154": {
				"typename": {
					"type": "string",
					"value": "WaypointIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						293,
						677
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"21": {
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"22": {
								"textContent": {
									"type": "string",
									"value": "STRAIGHT"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"font-family": "Calibri",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"direction\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"23": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										28,
										19
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "21",
								"dest": "23"
							},
							{
								"src": "23",
								"dest": "22"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/Waypoint/154.instance"
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/WaypointIcon"
			},
			"155": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "StepInScheduleLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						199.64526811952646,
						661.5383280706242
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;154.37436099513988,96.69111494421728%",
										"0;36.59380983315555,25.511336516226702%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;14.780302670815184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/StepInSchedule/155.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/ScheduleIcon/153.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink/155.instance": "M46,621L199.64526811952646,661.5383280706242",
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink/155.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/WaypointIcon/154.instance": "M199.57235911155078,661.5190914919726L352.9991756540173,701.9997825015485"
					}
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink"
			},
			"156": {
				"typename": {
					"type": "string",
					"value": "StartIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						98,
						675
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"width": {
									"type": "double",
									"value": 150
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#00b050",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"13": {
								"textContent": {
									"type": "string",
									"value": "StartStation"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"font-family": "Calibri",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"station\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"14": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										28,
										19
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "10",
								"dest": "14"
							},
							{
								"src": "14",
								"dest": "13"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/Start/156.instance"
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StartIcon"
			},
			"157": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "StepInScheduleLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						109.62785227220854,
						660.5795301535785
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;65.48424097906587,84.91232428965647%",
										"0;36.02355024915278,52.81947731403838%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;31.883563874608576"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/StepInSchedule/157.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/ScheduleIcon/153.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink/157.instance": "M46,621L109.62785227220854,660.5795301535785",
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink/157.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StartIcon/156.instance": "M109.62750904504276,660.579316650066L172.99931415871288,699.9995733743175"
					}
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink"
			},
			"158": {
				"typename": {
					"type": "string",
					"value": "EndIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						589,
						677
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"width": {
									"type": "double",
									"value": 150
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#e74170",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"17": {
								"textContent": {
									"type": "string",
									"value": "EndStation"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"font-family": "Calibri",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"station\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"18": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										28,
										19
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "16",
								"dest": "18"
							},
							{
								"src": "18",
								"dest": "17"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/End/158.instance"
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/EndIcon"
			},
			"159": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "StepInScheduleLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						287.14815572940984,
						662.0252049166215
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;377.27280796515856,99.44210353448221%",
										"0;35.99694575416402,10.548366918026707%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;6.055033517861019"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/StepInSchedule/159.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/ScheduleIcon/153.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink/159.instance": "M46,621L287.14815572940984,662.0252049166215",
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink/159.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/EndIcon/158.instance": "M287.1477914120833,662.0251429373254L663.9990290178473,701.9998348121649"
					}
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink"
			},
			"161": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "NextStepLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						273.14999944444446,
						713.4925000277776
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;29.649750643335437,99.87523388778447%",
										"0;-5.487484411066816,-4.993761694388977%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-2.862405226111606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/NextStep/161.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StartIcon/156.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/NextStepLink/161.instance": "M243,715L273.1499994444445,713.4925000277776",
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/NextStepLink/161.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/WaypointIcon/154.instance": "M273.0747499312478,713.4962625034375L302.99950055555547,712.0000249722221"
					}
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/NextStepLink"
			},
			"162": {
				"typename": {
					"type": "string",
					"value": "TrainIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						61,
						870
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"25": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Railway/Icons/train.png"
								},
								"width": {
									"type": "double",
									"value": 60
								},
								"height": {
									"type": "double",
									"value": 25
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"34": {
								"textContent": {
									"type": "string",
									"value": "Train"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"font-family": "Calibri",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/Train/162.instance"
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/TrainIcon"
			},
			"163": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.2,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "TrackToTrackLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						293.14763776476366,
						389.0271653487165
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/TrackToTrack/163.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Railway/Railway.defaultIcons/StationIcon/148.instance--/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/163.instance": "M172.99999999999997,352L293.14763776476366,389.0271653487165",
						"/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/163.instance--/Formalisms/Railway/Railway.defaultIcons/TurnoutIcon/143.instance": "M293.14740526444257,389.02712256865743L417.99953524316504,411.9999144847425"
					}
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink"
			},
			"178": {
				"typename": {
					"type": "string",
					"value": "EndIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						935,
						421
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"22": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Railway/Icons/end.png"
								},
								"width": {
									"type": "double",
									"value": 180
								},
								"height": {
									"type": "double",
									"value": 80
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/End/178.instance"
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/EndIcon"
			},
			"179": {
				"typename": {
					"type": "string",
					"value": "EndIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						939,
						513
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"22": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Railway/Icons/end.png"
								},
								"width": {
									"type": "double",
									"value": 180
								},
								"height": {
									"type": "double",
									"value": 80
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/End/179.instance"
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/EndIcon"
			},
			"180": {
				"typename": {
					"type": "string",
					"value": "CrossingIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						759,
						393
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"47": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Railway/Icons/crossing11.png"
								},
								"width": {
									"type": "double",
									"value": 180
								},
								"height": {
									"type": "double",
									"value": 160
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)\nif(getAttr(\"inDirection\") == \"STRAIGHT\") {\n    if(getAttr(\"outDirection\") == \"STRAIGHT\") {\n        ({'src':'/Formalisms/Railway/Icons/crossing21.png'})\n    } else {\n        ({'src':'/Formalisms/Railway/Icons/crossing22.png'})\n    }\n} else {\n    if(getAttr(\"outDirection\") == \"STRAIGHT\") {\n        ({'src':'/Formalisms/Railway/Icons/crossing11.png'})\n    } else {\n        ({'src':'/Formalisms/Railway/Icons/crossing12.png'})\n    }\n}"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/Crossing/180.instance"
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/CrossingIcon"
			},
			"181": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.2,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "TrackToTrackLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						969.5,
						471.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/TrackToTrack/181.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Railway/Railway.defaultIcons/CrossingIcon/180.instance--/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/181.instance": "M913,479L969.5,471.5",
						"/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/181.instance--/Formalisms/Railway/Railway.defaultIcons/EndIcon/178.instance": "M969.5748672371622,471.4900618711731L1025.9997346699038,464.0000352208093"
					}
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink"
			},
			"182": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.2,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "TrackToTrackLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						948,
						519
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/TrackToTrack/182.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Railway/Railway.defaultIcons/CrossingIcon/180.instance--/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/182.instance": "M876,483L948,519",
						"/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/182.instance--/Formalisms/Railway/Railway.defaultIcons/EndIcon/179.instance": "M948.1346624302134,519.0673312151068L1019.9993255625,554.99966278125"
					}
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink"
			},
			"183": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.2,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "TrackToTrackLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						767.612999933037,
						408.5989999413333
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/TrackToTrack/183.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Railway/Railway.defaultIcons/StationIcon/138.instance--/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/183.instance": "M711,359L767.612999933037,408.5989999413333",
						"/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/183.instance--/Formalisms/Railway/Railway.defaultIcons/CrossingIcon/180.instance": "M767.6126986002379,408.59873594180135L823.999397869037,457.99947246933334"
					}
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink"
			},
			"184": {
				"typename": {
					"type": "string",
					"value": "StraightIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						579,
						453
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Railway/Icons/straight.png"
								},
								"width": {
									"type": "double",
									"value": 180
								},
								"height": {
									"type": "double",
									"value": 40
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n(\n{\n    width:getAttr(\"width\"),\n    height:getAttr(\"height\")   \n}\n)"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/Straight/184.instance"
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/StraightIcon"
			},
			"185": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.2,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "TrackToTrackLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						761,
						494
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/TrackToTrack/185.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Railway/Railway.defaultIcons/StraightIcon/184.instance--/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/185.instance": "M738,522L761,494",
						"/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/185.instance--/Formalisms/Railway/Railway.defaultIcons/CrossingIcon/180.instance": "M761.0477835342602,493.9418287409006L783.9997340427811,466.00032377400544"
					}
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink"
			},
			"186": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.2,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "TrackToTrackLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						602,
						472
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Railway/Railway/TrackToTrack/186.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Railway/Railway.defaultIcons/TurnoutIcon/143.instance--/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/186.instance": "M529,461L602,472",
						"/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink/186.instance--/Formalisms/Railway/Railway.defaultIcons/StraightIcon/184.instance": "M602.1485741140162,472.02238788019423L674.9991899621062,482.99987793949543"
					}
				},
				"$type": "/Formalisms/Railway/Railway.defaultIcons/TrackToTrackLink"
			},
			"187": {
				"typename": {
					"type": "string",
					"value": "WaypointIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						439,
						675
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"21": {
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"22": {
								"textContent": {
									"type": "string",
									"value": " TURN"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"font-family": "Calibri",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"direction\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"23": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										28,
										19
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "21",
								"dest": "23"
							},
							{
								"src": "23",
								"dest": "22"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/Waypoint/187.instance"
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/WaypointIcon"
			},
			"188": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "StepInScheduleLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						273.4891238579627,
						660.5258733608007
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;226.19998164029715,98.50232547092645%",
										"0;35.53393197906257,17.242154065535846%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;9.92864249329225"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/StepInSchedule/188.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/ScheduleIcon/153.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink/188.instance": "M47.682625,621L273.4891238579627,660.5258733608007",
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink/188.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/WaypointIcon/187.instance": "M273.41502454316793,660.5129027857841L498.9994193356384,699.9998983587003"
					}
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/StepInScheduleLink"
			},
			"189": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "NextStepLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						425.64999853907966,
						707.9918919708606
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;18.133291078969933,99.85422732775085%",
										"0;-4.986017315327786,-5.3975258014996115%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-3.0940580589168625"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/NextStep/189.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/WaypointIcon/154.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/NextStepLink/189.instance": "M407,709L425.64999853907966,707.9918919708606",
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/NextStepLink/189.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/WaypointIcon/187.instance": "M425.57459441492495,707.9959678694635L443.9991906501096,707.0000437486428"
					}
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/NextStepLink"
			},
			"190": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "NextStepLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						576.1499986149583,
						710.5039473319725
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;18.954440024751875,99.96539193528471%",
										"0;-3.502583748558777,2.630668208823425%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;1.5074357587750495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/TrainSchedule/TrainSchedule/NextStep/190.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/WaypointIcon/187.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/NextStepLink/190.instance": "M557,710L576.1499986149583,710.5039473319725",
						"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/NextStepLink/190.instance--/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/EndIcon/158.instance": "M576.0746050927469,710.5019632919143L594.9992119113573,710.9999792608252"
					}
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule.defaultIcons/NextStepLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/TrainSchedule/TrainSchedule.defaultIcons",
			"/Formalisms/Railway/Railway.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"138": {
				"width": {
					"type": "int",
					"value": 180
				},
				"height": {
					"type": "int",
					"value": 70
				},
				"name": {
					"type": "string",
					"value": "EndStation"
				},
				"position": {
					"type": "list<int>",
					"value": [
						579,
						337
					]
				},
				"$type": "/Formalisms/Railway/Railway/Station"
			},
			"143": {
				"width": {
					"type": "int",
					"value": 180
				},
				"height": {
					"type": "int",
					"value": 100
				},
				"outDirection": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "STRAIGHT"
				},
				"position": {
					"type": "list<int>",
					"value": [
						399,
						373
					]
				},
				"$type": "/Formalisms/Railway/Railway/Turnout"
			},
			"144": {
				"direction": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "STRAIGHT"
				},
				"$type": "/Formalisms/Railway/Railway/TrackToTrack"
			},
			"148": {
				"width": {
					"type": "int",
					"value": 180
				},
				"height": {
					"type": "int",
					"value": 70
				},
				"name": {
					"type": "string",
					"value": "StartStation"
				},
				"position": {
					"type": "list<int>",
					"value": [
						217,
						338
					]
				},
				"$type": "/Formalisms/Railway/Railway/Station"
			},
			"150": {
				"width": {
					"type": "int",
					"value": 180
				},
				"height": {
					"type": "int",
					"value": 80
				},
				"position": {
					"type": "list<int>",
					"value": [
						38,
						349
					]
				},
				"$type": "/Formalisms/Railway/Railway/Start"
			},
			"151": {
				"direction": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "STRAIGHT"
				},
				"$type": "/Formalisms/Railway/Railway/TrackToTrack"
			},
			"152": {
				"step": {
					"type": "int",
					"value": "1"
				},
				"$type": "/Formalisms/Railway/Railway/Clock"
			},
			"153": {
				"train": {
					"type": "string",
					"value": "Train"
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/Schedule"
			},
			"154": {
				"direction": {
					"type": "ENUM(STRAIGHT, TURN)",
					"value": "STRAIGHT"
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/Waypoint"
			},
			"155": {
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/StepInSchedule"
			},
			"156": {
				"station": {
					"type": "string",
					"value": "StartStation"
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/Start"
			},
			"157": {
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/StepInSchedule"
			},
			"158": {
				"station": {
					"type": "string",
					"value": "EndStation"
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/End"
			},
			"159": {
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/StepInSchedule"
			},
			"161": {
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/NextStep"
			},
			"162": {
				"width": {
					"type": "int",
					"value": 60
				},
				"height": {
					"type": "int",
					"value": 25
				},
				"name": {
					"type": "string",
					"value": "Train"
				},
				"step": {
					"type": "int",
					"value": "1"
				},
				"position": {
					"type": "list<int>",
					"value": [
						61,
						870
					]
				},
				"$type": "/Formalisms/Railway/Railway/Train"
			},
			"163": {
				"direction": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "STRAIGHT"
				},
				"$type": "/Formalisms/Railway/Railway/TrackToTrack"
			},
			"178": {
				"width": {
					"type": "int",
					"value": 180
				},
				"height": {
					"type": "int",
					"value": 80
				},
				"position": {
					"type": "list<int>",
					"value": [
						935,
						421
					]
				},
				"$type": "/Formalisms/Railway/Railway/End"
			},
			"179": {
				"width": {
					"type": "int",
					"value": 180
				},
				"height": {
					"type": "int",
					"value": 80
				},
				"position": {
					"type": "list<int>",
					"value": [
						939,
						513
					]
				},
				"$type": "/Formalisms/Railway/Railway/End"
			},
			"180": {
				"width": {
					"type": "int",
					"value": 180
				},
				"height": {
					"type": "int",
					"value": 160
				},
				"inDirection": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "TURN"
				},
				"position": {
					"type": "list<int>",
					"value": [
						759,
						393
					]
				},
				"outDirection": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "STRAIGHT"
				},
				"$type": "/Formalisms/Railway/Railway/Crossing"
			},
			"181": {
				"direction": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "STRAIGHT"
				},
				"$type": "/Formalisms/Railway/Railway/TrackToTrack"
			},
			"182": {
				"direction": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "TURN"
				},
				"$type": "/Formalisms/Railway/Railway/TrackToTrack"
			},
			"183": {
				"direction": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "TURN"
				},
				"$type": "/Formalisms/Railway/Railway/TrackToTrack"
			},
			"184": {
				"width": {
					"type": "int",
					"value": 180
				},
				"height": {
					"type": "int",
					"value": 40
				},
				"position": {
					"type": "list<int>",
					"value": [
						579,
						453
					]
				},
				"$type": "/Formalisms/Railway/Railway/Straight"
			},
			"185": {
				"direction": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "STRAIGHT"
				},
				"$type": "/Formalisms/Railway/Railway/TrackToTrack"
			},
			"186": {
				"direction": {
					"type": "ENUM(STRAIGHT,TURN)",
					"value": "TURN"
				},
				"$type": "/Formalisms/Railway/Railway/TrackToTrack"
			},
			"187": {
				"direction": {
					"type": "ENUM(STRAIGHT, TURN)",
					"value": " TURN"
				},
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/Waypoint"
			},
			"188": {
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/StepInSchedule"
			},
			"189": {
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/NextStep"
			},
			"190": {
				"$type": "/Formalisms/TrainSchedule/TrainSchedule/NextStep"
			}
		},
		"edges": [
			{
				"src": "143",
				"dest": "144"
			},
			{
				"src": "144",
				"dest": "138"
			},
			{
				"src": "150",
				"dest": "151"
			},
			{
				"src": "151",
				"dest": "148"
			},
			{
				"src": "153",
				"dest": "155"
			},
			{
				"src": "155",
				"dest": "154"
			},
			{
				"src": "153",
				"dest": "157"
			},
			{
				"src": "157",
				"dest": "156"
			},
			{
				"src": "153",
				"dest": "159"
			},
			{
				"src": "159",
				"dest": "158"
			},
			{
				"src": "156",
				"dest": "161"
			},
			{
				"src": "161",
				"dest": "154"
			},
			{
				"src": "148",
				"dest": "163"
			},
			{
				"src": "163",
				"dest": "143"
			},
			{
				"src": "180",
				"dest": "181"
			},
			{
				"src": "181",
				"dest": "178"
			},
			{
				"src": "180",
				"dest": "182"
			},
			{
				"src": "182",
				"dest": "179"
			},
			{
				"src": "138",
				"dest": "183"
			},
			{
				"src": "183",
				"dest": "180"
			},
			{
				"src": "184",
				"dest": "185"
			},
			{
				"src": "185",
				"dest": "180"
			},
			{
				"src": "143",
				"dest": "186"
			},
			{
				"src": "186",
				"dest": "184"
			},
			{
				"src": "153",
				"dest": "188"
			},
			{
				"src": "188",
				"dest": "187"
			},
			{
				"src": "154",
				"dest": "189"
			},
			{
				"src": "189",
				"dest": "187"
			},
			{
				"src": "187",
				"dest": "190"
			},
			{
				"src": "190",
				"dest": "158"
			}
		],
		"metamodels": [
			"/Formalisms/TrainSchedule/TrainSchedule",
			"/Formalisms/Railway/Railway"
		]
	}
}