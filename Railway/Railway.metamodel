{
	"types": {
		"Track": [
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			},
			{
				"name": "width",
				"type": "int",
				"default": 100
			},
			{
				"name": "height",
				"type": "int",
				"default": 100
			}
		],
		"Straight": [
			{
				"name": "width",
				"type": "int",
				"default": 180
			},
			{
				"name": "height",
				"type": "int",
				"default": 40
			},
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"Turnout": [
			{
				"name": "width",
				"type": "int",
				"default": 180
			},
			{
				"name": "height",
				"type": "int",
				"default": 100
			},
			{
				"name": "outDirection",
				"type": "ENUM(STRAIGHT, TURN)",
				"default": "STRAIGHT"
			},
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"Junction": [
			{
				"name": "width",
				"type": "int",
				"default": 180
			},
			{
				"name": "height",
				"type": "int",
				"default": 100
			},
			{
				"name": "inDirection",
				"type": "ENUM(STRAIGHT, TURN)",
				"default": "STRAIGHT"
			},
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"Crossing": [
			{
				"name": "width",
				"type": "int",
				"default": 180
			},
			{
				"name": "height",
				"type": "int",
				"default": 160
			},
			{
				"name": "outDirection",
				"type": "ENUM(STRAIGHT, TURN)",
				"default": "STRAIGHT"
			},
			{
				"name": "inDirection",
				"type": "ENUM(STRAIGHT, TURN)",
				"default": "STRAIGHT"
			},
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"Start": [
			{
				"name": "width",
				"type": "int",
				"default": 180
			},
			{
				"name": "height",
				"type": "int",
				"default": 80
			},
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"End": [
			{
				"name": "width",
				"type": "int",
				"default": 180
			},
			{
				"name": "height",
				"type": "int",
				"default": 80
			},
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"Station": [
			{
				"name": "width",
				"type": "int",
				"default": 180
			},
			{
				"name": "height",
				"type": "int",
				"default": 70
			},
			{
				"name": "name",
				"type": "string",
				"default": "S"
			},
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"Train": [
			{
				"name": "width",
				"type": "int",
				"default": 60
			},
			{
				"name": "height",
				"type": "int",
				"default": 25
			},
			{
				"name": "name",
				"type": "string",
				"default": "T"
			},
			{
				"name": "step",
				"type": "int",
				"default": "1"
			},
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"Light": [
			{
				"name": "width",
				"type": "int",
				"default": 40
			},
			{
				"name": "height",
				"type": "int",
				"default": 20
			},
			{
				"name": "color",
				"type": "ENUM(RED, GREEN)",
				"default": "RED"
			},
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"Positionable": [
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			},
			{
				"name": "width",
				"type": "int",
				"default": 100
			},
			{
				"name": "height",
				"type": "int",
				"default": 100
			}
		],
		"TrackToTrack": [
			{
				"name": "direction",
				"type": "ENUM(STRAIGHT, TURN)",
				"default": "STRAIGHT"
			}
		],
		"TrainOnTrack": [],
		"LightOnTrack": [],
		"Clock": [
			{
				"name": "step",
				"type": "int",
				"default": "1"
			}
		],
		"Join": [
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			},
			{
				"name": "width",
				"type": "int",
				"default": 100
			},
			{
				"name": "height",
				"type": "int",
				"default": 100
			}
		],
		"Split": [
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			},
			{
				"name": "width",
				"type": "int",
				"default": 100
			},
			{
				"name": "height",
				"type": "int",
				"default": 100
			}
		]
	},
	"constraints": [
		{
			"name": "noAbstractInstances",
			"event": "pre-create",
			"code": "false",
			"targetType": "Track"
		},
		{
			"name": "noAbstractInstances",
			"event": "pre-create",
			"code": "false",
			"targetType": "Positionable"
		},
		{
			"name": "noAbstractInstances",
			"event": "pre-create",
			"code": "false",
			"targetType": "Join"
		},
		{
			"name": "noAbstractInstances",
			"event": "pre-create",
			"code": "false",
			"targetType": "Split"
		}
	],
	"actions": [
		{
			"name": "snapping",
			"event": "post-connect",
			"code": "/*newline*/var neighbourLinks = getNeighbors('>');/*newline*/var neighbourLink = neighbourLinks[neighbourLinks.length-1];/*newline*/var singleTrackHeight = 20;/*newline*/function getSelfAdjustment() {/*newline*/    if(getAttr('$type').match(/Straight/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Start/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Station/)) {/*newline*/        return 4*getAttr('height')/5;/*newline*/    } else if(getAttr('$type').match(/Turnout/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type').match(/Junction/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type').match(/Crossing/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height')/2;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/function getNeighbourAdjustment(neighbour) {/*newline*/    if(getAttr('$type', neighbour).match(/Straight/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/End/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/Station/)) {/*newline*/        return 4*getAttr('height', neighbour)/5;/*newline*/    } else if(getAttr('$type', neighbour).match(/Turnout/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type', neighbour).match(/Junction/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height', neighbour);/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbour).match(/Crossing/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height', neighbour)/2;/*newline*/        } else {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return 0;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/if(neighbourLink) {/*newline*/    if(getAttr('$type', neighbourLink).match(/TrackToTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            neighbourPos = getAttr('position', neighbour);/*newline*/        setAttr('position', [neighbourPos[0] - getAttr('width', neighbour), neighbourPos[1] - getSelfAdjustment() + getNeighbourAdjustment(neighbour)]);/*newline*/    } else if(getAttr('$type', neighbourLink).match(/TrainOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + 3*getAttr('height')/4 - getAttr('height', neighbour)/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + getAttr('height')/2 - getAttr('height', neighbour)/2], neighbour);/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbourLink).match(/LightOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')], neighbour);/*newline*/        } else if(getAttr('$type').match(/Crossing/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + singleTrackHeight*2], neighbour);/*newline*/        }/*newline*/    } else {/*newline*/        print('Invalid grid node link');/*newline*/    }/*newline*/}",
			"targetType": "Track"
		},
		{
			"name": "snapping",
			"event": "post-connect",
			"code": "/*newline*/var neighbourLinks = getNeighbors('>');/*newline*/var neighbourLink = neighbourLinks[neighbourLinks.length-1];/*newline*/var singleTrackHeight = 20;/*newline*/function getSelfAdjustment() {/*newline*/    if(getAttr('$type').match(/Straight/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Start/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Station/)) {/*newline*/        return 4*getAttr('height')/5;/*newline*/    } else if(getAttr('$type').match(/Turnout/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type').match(/Junction/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type').match(/Crossing/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height')/2;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/function getNeighbourAdjustment(neighbour) {/*newline*/    if(getAttr('$type', neighbour).match(/Straight/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/End/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/Station/)) {/*newline*/        return 4*getAttr('height', neighbour)/5;/*newline*/    } else if(getAttr('$type', neighbour).match(/Turnout/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type', neighbour).match(/Junction/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height', neighbour);/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbour).match(/Crossing/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height', neighbour)/2;/*newline*/        } else {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return 0;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/if(neighbourLink) {/*newline*/    if(getAttr('$type', neighbourLink).match(/TrackToTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            neighbourPos = getAttr('position', neighbour);/*newline*/        setAttr('position', [neighbourPos[0] - getAttr('width', neighbour), neighbourPos[1] - getSelfAdjustment() + getNeighbourAdjustment(neighbour)]);/*newline*/    } else if(getAttr('$type', neighbourLink).match(/TrainOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + 3*getAttr('height')/4 - getAttr('height', neighbour)/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + getAttr('height')/2 - getAttr('height', neighbour)/2], neighbour);/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbourLink).match(/LightOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')], neighbour);/*newline*/        } else if(getAttr('$type').match(/Crossing/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + singleTrackHeight*2], neighbour);/*newline*/        }/*newline*/    } else {/*newline*/        print('Invalid grid node link');/*newline*/    }/*newline*/}",
			"targetType": "Straight"
		},
		{
			"name": "snapping",
			"event": "post-connect",
			"code": "/*newline*/var neighbourLinks = getNeighbors('>');/*newline*/var neighbourLink = neighbourLinks[neighbourLinks.length-1];/*newline*/var singleTrackHeight = 20;/*newline*/function getSelfAdjustment() {/*newline*/    if(getAttr('$type').match(/Straight/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Start/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Station/)) {/*newline*/        return 4*getAttr('height')/5;/*newline*/    } else if(getAttr('$type').match(/Turnout/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type').match(/Junction/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type').match(/Crossing/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height')/2;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/function getNeighbourAdjustment(neighbour) {/*newline*/    if(getAttr('$type', neighbour).match(/Straight/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/End/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/Station/)) {/*newline*/        return 4*getAttr('height', neighbour)/5;/*newline*/    } else if(getAttr('$type', neighbour).match(/Turnout/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type', neighbour).match(/Junction/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height', neighbour);/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbour).match(/Crossing/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height', neighbour)/2;/*newline*/        } else {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return 0;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/if(neighbourLink) {/*newline*/    if(getAttr('$type', neighbourLink).match(/TrackToTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            neighbourPos = getAttr('position', neighbour);/*newline*/        setAttr('position', [neighbourPos[0] - getAttr('width', neighbour), neighbourPos[1] - getSelfAdjustment() + getNeighbourAdjustment(neighbour)]);/*newline*/    } else if(getAttr('$type', neighbourLink).match(/TrainOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + 3*getAttr('height')/4 - getAttr('height', neighbour)/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + getAttr('height')/2 - getAttr('height', neighbour)/2], neighbour);/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbourLink).match(/LightOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')], neighbour);/*newline*/        } else if(getAttr('$type').match(/Crossing/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + singleTrackHeight*2], neighbour);/*newline*/        }/*newline*/    } else {/*newline*/        print('Invalid grid node link');/*newline*/    }/*newline*/}",
			"targetType": "Turnout"
		},
		{
			"name": "snapping",
			"event": "post-connect",
			"code": "/*newline*/var neighbourLinks = getNeighbors('>');/*newline*/var neighbourLink = neighbourLinks[neighbourLinks.length-1];/*newline*/var singleTrackHeight = 20;/*newline*/function getSelfAdjustment() {/*newline*/    if(getAttr('$type').match(/Straight/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Start/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Station/)) {/*newline*/        return 4*getAttr('height')/5;/*newline*/    } else if(getAttr('$type').match(/Turnout/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type').match(/Junction/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type').match(/Crossing/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height')/2;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/function getNeighbourAdjustment(neighbour) {/*newline*/    if(getAttr('$type', neighbour).match(/Straight/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/End/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/Station/)) {/*newline*/        return 4*getAttr('height', neighbour)/5;/*newline*/    } else if(getAttr('$type', neighbour).match(/Turnout/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type', neighbour).match(/Junction/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height', neighbour);/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbour).match(/Crossing/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height', neighbour)/2;/*newline*/        } else {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return 0;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/if(neighbourLink) {/*newline*/    if(getAttr('$type', neighbourLink).match(/TrackToTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            neighbourPos = getAttr('position', neighbour);/*newline*/        setAttr('position', [neighbourPos[0] - getAttr('width', neighbour), neighbourPos[1] - getSelfAdjustment() + getNeighbourAdjustment(neighbour)]);/*newline*/    } else if(getAttr('$type', neighbourLink).match(/TrainOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + 3*getAttr('height')/4 - getAttr('height', neighbour)/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + getAttr('height')/2 - getAttr('height', neighbour)/2], neighbour);/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbourLink).match(/LightOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')], neighbour);/*newline*/        } else if(getAttr('$type').match(/Crossing/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + singleTrackHeight*2], neighbour);/*newline*/        }/*newline*/    } else {/*newline*/        print('Invalid grid node link');/*newline*/    }/*newline*/}",
			"targetType": "Junction"
		},
		{
			"name": "snapping",
			"event": "post-connect",
			"code": "/*newline*/var neighbourLinks = getNeighbors('>');/*newline*/var neighbourLink = neighbourLinks[neighbourLinks.length-1];/*newline*/var singleTrackHeight = 20;/*newline*/function getSelfAdjustment() {/*newline*/    if(getAttr('$type').match(/Straight/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Start/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Station/)) {/*newline*/        return 4*getAttr('height')/5;/*newline*/    } else if(getAttr('$type').match(/Turnout/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type').match(/Junction/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type').match(/Crossing/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height')/2;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/function getNeighbourAdjustment(neighbour) {/*newline*/    if(getAttr('$type', neighbour).match(/Straight/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/End/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/Station/)) {/*newline*/        return 4*getAttr('height', neighbour)/5;/*newline*/    } else if(getAttr('$type', neighbour).match(/Turnout/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type', neighbour).match(/Junction/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height', neighbour);/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbour).match(/Crossing/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height', neighbour)/2;/*newline*/        } else {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return 0;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/if(neighbourLink) {/*newline*/    if(getAttr('$type', neighbourLink).match(/TrackToTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            neighbourPos = getAttr('position', neighbour);/*newline*/        setAttr('position', [neighbourPos[0] - getAttr('width', neighbour), neighbourPos[1] - getSelfAdjustment() + getNeighbourAdjustment(neighbour)]);/*newline*/    } else if(getAttr('$type', neighbourLink).match(/TrainOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + 3*getAttr('height')/4 - getAttr('height', neighbour)/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + getAttr('height')/2 - getAttr('height', neighbour)/2], neighbour);/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbourLink).match(/LightOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')], neighbour);/*newline*/        } else if(getAttr('$type').match(/Crossing/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + singleTrackHeight*2], neighbour);/*newline*/        }/*newline*/    } else {/*newline*/        print('Invalid grid node link');/*newline*/    }/*newline*/}",
			"targetType": "Crossing"
		},
		{
			"name": "snapping",
			"event": "post-connect",
			"code": "/*newline*/var neighbourLinks = getNeighbors('>');/*newline*/var neighbourLink = neighbourLinks[neighbourLinks.length-1];/*newline*/var singleTrackHeight = 20;/*newline*/function getSelfAdjustment() {/*newline*/    if(getAttr('$type').match(/Straight/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Start/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Station/)) {/*newline*/        return 4*getAttr('height')/5;/*newline*/    } else if(getAttr('$type').match(/Turnout/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type').match(/Junction/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type').match(/Crossing/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height')/2;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/function getNeighbourAdjustment(neighbour) {/*newline*/    if(getAttr('$type', neighbour).match(/Straight/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/End/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/Station/)) {/*newline*/        return 4*getAttr('height', neighbour)/5;/*newline*/    } else if(getAttr('$type', neighbour).match(/Turnout/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type', neighbour).match(/Junction/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height', neighbour);/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbour).match(/Crossing/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height', neighbour)/2;/*newline*/        } else {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return 0;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/if(neighbourLink) {/*newline*/    if(getAttr('$type', neighbourLink).match(/TrackToTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            neighbourPos = getAttr('position', neighbour);/*newline*/        setAttr('position', [neighbourPos[0] - getAttr('width', neighbour), neighbourPos[1] - getSelfAdjustment() + getNeighbourAdjustment(neighbour)]);/*newline*/    } else if(getAttr('$type', neighbourLink).match(/TrainOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + 3*getAttr('height')/4 - getAttr('height', neighbour)/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + getAttr('height')/2 - getAttr('height', neighbour)/2], neighbour);/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbourLink).match(/LightOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')], neighbour);/*newline*/        } else if(getAttr('$type').match(/Crossing/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + singleTrackHeight*2], neighbour);/*newline*/        }/*newline*/    } else {/*newline*/        print('Invalid grid node link');/*newline*/    }/*newline*/}",
			"targetType": "Start"
		},
		{
			"name": "snapping",
			"event": "post-connect",
			"code": "/*newline*/var neighbourLinks = getNeighbors('>');/*newline*/var neighbourLink = neighbourLinks[neighbourLinks.length-1];/*newline*/var singleTrackHeight = 20;/*newline*/function getSelfAdjustment() {/*newline*/    if(getAttr('$type').match(/Straight/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Start/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Station/)) {/*newline*/        return 4*getAttr('height')/5;/*newline*/    } else if(getAttr('$type').match(/Turnout/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type').match(/Junction/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type').match(/Crossing/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height')/2;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/function getNeighbourAdjustment(neighbour) {/*newline*/    if(getAttr('$type', neighbour).match(/Straight/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/End/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/Station/)) {/*newline*/        return 4*getAttr('height', neighbour)/5;/*newline*/    } else if(getAttr('$type', neighbour).match(/Turnout/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type', neighbour).match(/Junction/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height', neighbour);/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbour).match(/Crossing/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height', neighbour)/2;/*newline*/        } else {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return 0;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/if(neighbourLink) {/*newline*/    if(getAttr('$type', neighbourLink).match(/TrackToTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            neighbourPos = getAttr('position', neighbour);/*newline*/        setAttr('position', [neighbourPos[0] - getAttr('width', neighbour), neighbourPos[1] - getSelfAdjustment() + getNeighbourAdjustment(neighbour)]);/*newline*/    } else if(getAttr('$type', neighbourLink).match(/TrainOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + 3*getAttr('height')/4 - getAttr('height', neighbour)/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + getAttr('height')/2 - getAttr('height', neighbour)/2], neighbour);/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbourLink).match(/LightOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')], neighbour);/*newline*/        } else if(getAttr('$type').match(/Crossing/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + singleTrackHeight*2], neighbour);/*newline*/        }/*newline*/    } else {/*newline*/        print('Invalid grid node link');/*newline*/    }/*newline*/}",
			"targetType": "End"
		},
		{
			"name": "snapping",
			"event": "post-connect",
			"code": "/*newline*/var neighbourLinks = getNeighbors('>');/*newline*/var neighbourLink = neighbourLinks[neighbourLinks.length-1];/*newline*/var singleTrackHeight = 20;/*newline*/function getSelfAdjustment() {/*newline*/    if(getAttr('$type').match(/Straight/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Start/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Station/)) {/*newline*/        return 4*getAttr('height')/5;/*newline*/    } else if(getAttr('$type').match(/Turnout/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type').match(/Junction/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type').match(/Crossing/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height')/2;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/function getNeighbourAdjustment(neighbour) {/*newline*/    if(getAttr('$type', neighbour).match(/Straight/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/End/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/Station/)) {/*newline*/        return 4*getAttr('height', neighbour)/5;/*newline*/    } else if(getAttr('$type', neighbour).match(/Turnout/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type', neighbour).match(/Junction/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height', neighbour);/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbour).match(/Crossing/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height', neighbour)/2;/*newline*/        } else {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return 0;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/if(neighbourLink) {/*newline*/    if(getAttr('$type', neighbourLink).match(/TrackToTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            neighbourPos = getAttr('position', neighbour);/*newline*/        setAttr('position', [neighbourPos[0] - getAttr('width', neighbour), neighbourPos[1] - getSelfAdjustment() + getNeighbourAdjustment(neighbour)]);/*newline*/    } else if(getAttr('$type', neighbourLink).match(/TrainOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + 3*getAttr('height')/4 - getAttr('height', neighbour)/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + getAttr('height')/2 - getAttr('height', neighbour)/2], neighbour);/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbourLink).match(/LightOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')], neighbour);/*newline*/        } else if(getAttr('$type').match(/Crossing/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + singleTrackHeight*2], neighbour);/*newline*/        }/*newline*/    } else {/*newline*/        print('Invalid grid node link');/*newline*/    }/*newline*/}",
			"targetType": "Station"
		},
		{
			"name": "snapping",
			"event": "post-connect",
			"code": "/*newline*/var neighbourLinks = getNeighbors('>');/*newline*/var neighbourLink = neighbourLinks[neighbourLinks.length-1];/*newline*/var singleTrackHeight = 20;/*newline*/function getSelfAdjustment() {/*newline*/    if(getAttr('$type').match(/Straight/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Start/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Station/)) {/*newline*/        return 4*getAttr('height')/5;/*newline*/    } else if(getAttr('$type').match(/Turnout/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type').match(/Junction/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type').match(/Crossing/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height')/2;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/function getNeighbourAdjustment(neighbour) {/*newline*/    if(getAttr('$type', neighbour).match(/Straight/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/End/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/Station/)) {/*newline*/        return 4*getAttr('height', neighbour)/5;/*newline*/    } else if(getAttr('$type', neighbour).match(/Turnout/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type', neighbour).match(/Junction/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height', neighbour);/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbour).match(/Crossing/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height', neighbour)/2;/*newline*/        } else {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return 0;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/if(neighbourLink) {/*newline*/    if(getAttr('$type', neighbourLink).match(/TrackToTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            neighbourPos = getAttr('position', neighbour);/*newline*/        setAttr('position', [neighbourPos[0] - getAttr('width', neighbour), neighbourPos[1] - getSelfAdjustment() + getNeighbourAdjustment(neighbour)]);/*newline*/    } else if(getAttr('$type', neighbourLink).match(/TrainOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + 3*getAttr('height')/4 - getAttr('height', neighbour)/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + getAttr('height')/2 - getAttr('height', neighbour)/2], neighbour);/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbourLink).match(/LightOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')], neighbour);/*newline*/        } else if(getAttr('$type').match(/Crossing/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + singleTrackHeight*2], neighbour);/*newline*/        }/*newline*/    } else {/*newline*/        print('Invalid grid node link');/*newline*/    }/*newline*/}",
			"targetType": "Join"
		},
		{
			"name": "snapping",
			"event": "post-connect",
			"code": "/*newline*/var neighbourLinks = getNeighbors('>');/*newline*/var neighbourLink = neighbourLinks[neighbourLinks.length-1];/*newline*/var singleTrackHeight = 20;/*newline*/function getSelfAdjustment() {/*newline*/    if(getAttr('$type').match(/Straight/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Start/)) {/*newline*/        return getAttr('height')/2;/*newline*/    } else if(getAttr('$type').match(/Station/)) {/*newline*/        return 4*getAttr('height')/5;/*newline*/    } else if(getAttr('$type').match(/Turnout/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type').match(/Junction/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type').match(/Crossing/)) {/*newline*/        if(getNeighbors('>').length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height');/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height')/2;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/function getNeighbourAdjustment(neighbour) {/*newline*/    if(getAttr('$type', neighbour).match(/Straight/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/End/)) {/*newline*/        return getAttr('height', neighbour)/2;/*newline*/    } else if(getAttr('$type', neighbour).match(/Station/)) {/*newline*/        return 4*getAttr('height', neighbour)/5;/*newline*/    } else if(getAttr('$type', neighbour).match(/Turnout/)) {/*newline*/        return singleTrackHeight;/*newline*/    } else if(getAttr('$type', neighbour).match(/Junction/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return getAttr('height', neighbour);/*newline*/        } else {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return singleTrackHeight;/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbour).match(/Crossing/)) {/*newline*/        if(getNeighbors('<', '*', neighbour).length > 1) {/*newline*/            setAttr('direction', 'STRAIGHT', neighbourLink);/*newline*/            return getAttr('height', neighbour)/2;/*newline*/        } else {/*newline*/            setAttr('direction', 'TURN', neighbourLink);/*newline*/            return 0;/*newline*/        }/*newline*/    }/*newline*/}/*newline*/if(neighbourLink) {/*newline*/    if(getAttr('$type', neighbourLink).match(/TrackToTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            neighbourPos = getAttr('position', neighbour);/*newline*/        setAttr('position', [neighbourPos[0] - getAttr('width', neighbour), neighbourPos[1] - getSelfAdjustment() + getNeighbourAdjustment(neighbour)]);/*newline*/    } else if(getAttr('$type', neighbourLink).match(/TrainOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + 3*getAttr('height')/4 - getAttr('height', neighbour)/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0] + getAttr('width')/2  - getAttr('width', neighbour)/2, globalPos[1] + getAttr('height')/2 - getAttr('height', neighbour)/2], neighbour);/*newline*/        }/*newline*/    } else if(getAttr('$type', neighbourLink).match(/LightOnTrack/)) {/*newline*/        var neighbour = getNeighbors('>', '*', neighbourLink)[0],/*newline*/            globalPos = getAttr('position');/*newline*/        if(getAttr('$type').match(/Station/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')], neighbour);/*newline*/        } else if(getAttr('$type').match(/Crossing/)) {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + getAttr('height')/2], neighbour);/*newline*/        } else {/*newline*/            setAttr('position', [globalPos[0], globalPos[1] + singleTrackHeight*2], neighbour);/*newline*/        }/*newline*/    } else {/*newline*/        print('Invalid grid node link');/*newline*/    }/*newline*/}",
			"targetType": "Split"
		}
	],
	"cardinalities": {
		"Track": [
			{
				"dir": "in",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "LightOnTrack",
				"min": "0",
				"max": "1"
			}
		],
		"Straight": [
			{
				"dir": "in",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "LightOnTrack",
				"min": "0",
				"max": "1"
			}
		],
		"Turnout": [
			{
				"dir": "out",
				"type": "TrackToTrack",
				"min": "0",
				"max": "2"
			},
			{
				"dir": "in",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "LightOnTrack",
				"min": "0",
				"max": "1"
			}
		],
		"Junction": [
			{
				"dir": "in",
				"type": "TrackToTrack",
				"min": "0",
				"max": "2"
			},
			{
				"dir": "out",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "LightOnTrack",
				"min": "0",
				"max": "1"
			}
		],
		"Crossing": [
			{
				"dir": "in",
				"type": "TrackToTrack",
				"min": "0",
				"max": "2"
			},
			{
				"dir": "out",
				"type": "TrackToTrack",
				"min": "0",
				"max": "2"
			},
			{
				"dir": "out",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "LightOnTrack",
				"min": "0",
				"max": "1"
			}
		],
		"Start": [
			{
				"dir": "in",
				"type": "TrackIn",
				"min": "0",
				"max": "0"
			},
			{
				"dir": "in",
				"type": "TrackOut",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "LightOnTrack",
				"min": "0",
				"max": "1"
			}
		],
		"End": [
			{
				"dir": "in",
				"type": "TrackIn",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "TrackOut",
				"min": "0",
				"max": "0"
			},
			{
				"dir": "in",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "LightOnTrack",
				"min": "0",
				"max": "1"
			}
		],
		"Station": [
			{
				"dir": "in",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "LightOnTrack",
				"min": "0",
				"max": "1"
			}
		],
		"Train": [
			{
				"dir": "in",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "Infinity"
			}
		],
		"Light": [
			{
				"dir": "in",
				"type": "LightOnTrack",
				"min": "0",
				"max": "Infinity"
			}
		],
		"Positionable": [],
		"TrackToTrack": [
			{
				"dir": "in",
				"type": "Track",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Track",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Join",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Split",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Straight",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Straight",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Turnout",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Turnout",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Junction",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Junction",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Crossing",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Crossing",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Start",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Start",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "End",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "End",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Station",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Station",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Join",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Split",
				"min": "0",
				"max": "1"
			}
		],
		"TrainOnTrack": [
			{
				"dir": "in",
				"type": "Track",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Train",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Straight",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Turnout",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Junction",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Crossing",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Start",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "End",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Station",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Join",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Split",
				"min": "0",
				"max": "1"
			}
		],
		"LightOnTrack": [
			{
				"dir": "in",
				"type": "Track",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Light",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Straight",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Turnout",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Junction",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Crossing",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Start",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "End",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Station",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Join",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Split",
				"min": "0",
				"max": "1"
			}
		],
		"Clock": [],
		"Join": [
			{
				"dir": "in",
				"type": "TrackToTrack",
				"min": "0",
				"max": "2"
			},
			{
				"dir": "out",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "LightOnTrack",
				"min": "0",
				"max": "1"
			}
		],
		"Split": [
			{
				"dir": "out",
				"type": "TrackToTrack",
				"min": "0",
				"max": "2"
			},
			{
				"dir": "in",
				"type": "TrackToTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "TrainOnTrack",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "LightOnTrack",
				"min": "0",
				"max": "1"
			}
		]
	},
	"legalConnections": {
		"Track": {
			"Track": [
				"TrackToTrack"
			],
			"Straight": [
				"TrackToTrack"
			],
			"Turnout": [
				"TrackToTrack"
			],
			"Junction": [
				"TrackToTrack"
			],
			"Crossing": [
				"TrackToTrack"
			],
			"Start": [
				"TrackToTrack"
			],
			"End": [
				"TrackToTrack"
			],
			"Station": [
				"TrackToTrack"
			],
			"Join": [
				"TrackToTrack"
			],
			"Split": [
				"TrackToTrack"
			],
			"Train": [
				"TrainOnTrack"
			],
			"Light": [
				"LightOnTrack"
			]
		},
		"Straight": {
			"Track": [
				"TrackToTrack"
			],
			"Straight": [
				"TrackToTrack"
			],
			"Turnout": [
				"TrackToTrack"
			],
			"Junction": [
				"TrackToTrack"
			],
			"Crossing": [
				"TrackToTrack"
			],
			"Start": [
				"TrackToTrack"
			],
			"End": [
				"TrackToTrack"
			],
			"Station": [
				"TrackToTrack"
			],
			"Join": [
				"TrackToTrack"
			],
			"Split": [
				"TrackToTrack"
			],
			"Train": [
				"TrainOnTrack"
			],
			"Light": [
				"LightOnTrack"
			]
		},
		"Turnout": {
			"Track": [
				"TrackToTrack"
			],
			"Straight": [
				"TrackToTrack"
			],
			"Turnout": [
				"TrackToTrack"
			],
			"Junction": [
				"TrackToTrack"
			],
			"Crossing": [
				"TrackToTrack"
			],
			"Start": [
				"TrackToTrack"
			],
			"End": [
				"TrackToTrack"
			],
			"Station": [
				"TrackToTrack"
			],
			"Join": [
				"TrackToTrack"
			],
			"Split": [
				"TrackToTrack"
			],
			"Train": [
				"TrainOnTrack"
			],
			"Light": [
				"LightOnTrack"
			]
		},
		"Junction": {
			"Track": [
				"TrackToTrack"
			],
			"Straight": [
				"TrackToTrack"
			],
			"Turnout": [
				"TrackToTrack"
			],
			"Junction": [
				"TrackToTrack"
			],
			"Crossing": [
				"TrackToTrack"
			],
			"Start": [
				"TrackToTrack"
			],
			"End": [
				"TrackToTrack"
			],
			"Station": [
				"TrackToTrack"
			],
			"Join": [
				"TrackToTrack"
			],
			"Split": [
				"TrackToTrack"
			],
			"Train": [
				"TrainOnTrack"
			],
			"Light": [
				"LightOnTrack"
			]
		},
		"Crossing": {
			"Track": [
				"TrackToTrack"
			],
			"Straight": [
				"TrackToTrack"
			],
			"Turnout": [
				"TrackToTrack"
			],
			"Junction": [
				"TrackToTrack"
			],
			"Crossing": [
				"TrackToTrack"
			],
			"Start": [
				"TrackToTrack"
			],
			"End": [
				"TrackToTrack"
			],
			"Station": [
				"TrackToTrack"
			],
			"Join": [
				"TrackToTrack"
			],
			"Split": [
				"TrackToTrack"
			],
			"Train": [
				"TrainOnTrack"
			],
			"Light": [
				"LightOnTrack"
			]
		},
		"Start": {
			"Track": [
				"TrackToTrack"
			],
			"Straight": [
				"TrackToTrack"
			],
			"Turnout": [
				"TrackToTrack"
			],
			"Junction": [
				"TrackToTrack"
			],
			"Crossing": [
				"TrackToTrack"
			],
			"Start": [
				"TrackToTrack"
			],
			"End": [
				"TrackToTrack"
			],
			"Station": [
				"TrackToTrack"
			],
			"Join": [
				"TrackToTrack"
			],
			"Split": [
				"TrackToTrack"
			],
			"Train": [
				"TrainOnTrack"
			],
			"Light": [
				"LightOnTrack"
			]
		},
		"End": {
			"Track": [
				"TrackToTrack"
			],
			"Straight": [
				"TrackToTrack"
			],
			"Turnout": [
				"TrackToTrack"
			],
			"Junction": [
				"TrackToTrack"
			],
			"Crossing": [
				"TrackToTrack"
			],
			"Start": [
				"TrackToTrack"
			],
			"End": [
				"TrackToTrack"
			],
			"Station": [
				"TrackToTrack"
			],
			"Join": [
				"TrackToTrack"
			],
			"Split": [
				"TrackToTrack"
			],
			"Train": [
				"TrainOnTrack"
			],
			"Light": [
				"LightOnTrack"
			]
		},
		"Station": {
			"Track": [
				"TrackToTrack"
			],
			"Straight": [
				"TrackToTrack"
			],
			"Turnout": [
				"TrackToTrack"
			],
			"Junction": [
				"TrackToTrack"
			],
			"Crossing": [
				"TrackToTrack"
			],
			"Start": [
				"TrackToTrack"
			],
			"End": [
				"TrackToTrack"
			],
			"Station": [
				"TrackToTrack"
			],
			"Join": [
				"TrackToTrack"
			],
			"Split": [
				"TrackToTrack"
			],
			"Train": [
				"TrainOnTrack"
			],
			"Light": [
				"LightOnTrack"
			]
		},
		"Join": {
			"Track": [
				"TrackToTrack"
			],
			"Straight": [
				"TrackToTrack"
			],
			"Turnout": [
				"TrackToTrack"
			],
			"Junction": [
				"TrackToTrack"
			],
			"Crossing": [
				"TrackToTrack"
			],
			"Start": [
				"TrackToTrack"
			],
			"End": [
				"TrackToTrack"
			],
			"Station": [
				"TrackToTrack"
			],
			"Join": [
				"TrackToTrack"
			],
			"Split": [
				"TrackToTrack"
			],
			"Train": [
				"TrainOnTrack"
			],
			"Light": [
				"LightOnTrack"
			]
		},
		"Split": {
			"Track": [
				"TrackToTrack"
			],
			"Straight": [
				"TrackToTrack"
			],
			"Turnout": [
				"TrackToTrack"
			],
			"Junction": [
				"TrackToTrack"
			],
			"Crossing": [
				"TrackToTrack"
			],
			"Start": [
				"TrackToTrack"
			],
			"End": [
				"TrackToTrack"
			],
			"Station": [
				"TrackToTrack"
			],
			"Join": [
				"TrackToTrack"
			],
			"Split": [
				"TrackToTrack"
			],
			"Train": [
				"TrainOnTrack"
			],
			"Light": [
				"LightOnTrack"
			]
		}
	},
	"connectorTypes": {
		"TrackToTrack": "visual",
		"TrainOnTrack": "containment",
		"LightOnTrack": "containment"
	},
	"types2parentTypes": {
		"Track": [
			"Positionable"
		],
		"Straight": [
			"Positionable",
			"Track"
		],
		"Turnout": [
			"Positionable",
			"Track",
			"Split"
		],
		"Junction": [
			"Positionable",
			"Track",
			"Join"
		],
		"Crossing": [
			"Positionable",
			"Track",
			"Track",
			"Split",
			"Join"
		],
		"Start": [
			"Positionable",
			"Track"
		],
		"End": [
			"Positionable",
			"Track"
		],
		"Station": [
			"Positionable",
			"Track"
		],
		"Train": [
			"Positionable"
		],
		"Light": [
			"Positionable"
		],
		"Positionable": [],
		"TrackToTrack": [],
		"TrainOnTrack": [],
		"LightOnTrack": [],
		"Clock": [],
		"Join": [
			"Positionable",
			"Track"
		],
		"Split": [
			"Positionable",
			"Track"
		]
	}
}